# This is the manifest for the backend service
# Usually it should be separated in files ConfigMap, Secret, Deployment, 
# Service, etc., but for this assessment, I will use a single file to make it simpler

# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
data:
  MQTT_BROKER_URL: "mqtt://mosquitto:1883"
  MQTT_TOPIC: "iot/data"
  DB_HOST: "postgres"
  DB_PORT: "5432"
  DB_NAME: "tiiassessment"
  PORT: "3000"

---

# Secret
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
type: Opaque
data:
  DB_USER: dGlpYXNzZXNzbWVudA==         # "tiiassessment" in base64 (REMOVE THIS LINE BEFORE DEPLOYING)
  DB_PASSWORD: ZG9udGZvcmdldHRvcHJvdGVjdG1l # "dontforgettoprotectme" in base64 (REMOVE THIS LINE BEFORE DEPLOYING)

---

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: backend:latest   # Use the name of the local image or the registry
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: MQTT_BROKER_URL
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: MQTT_BROKER_URL
            - name: MQTT_TOPIC
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: MQTT_TOPIC
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DB_NAME
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: DB_PASSWORD

--- 

# Service
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  # I'm using ClusterIP for this assessment so it cannot be accessed from outside the cluster
  # To be able to access it from outside the cluster, change the type to NodePort or LoadBalancer
  type: ClusterIP

