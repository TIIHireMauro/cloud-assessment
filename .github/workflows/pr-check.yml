name: Pull Request Check

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  validate:
    name: Validate Changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Terraform Format Check
        working-directory: ./infrastructure/terraform
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: ./infrastructure/terraform
        run: terraform init -backend=false && terraform validate

  security-scan-pr:
    name: Security Scan (PR)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  test-pr:
    name: Test Applications (PR)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [backend, simulator]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.app }}/package-lock.json

      - name: Install dependencies
        run: |
          cd ${{ matrix.app }}
          npm ci

      - name: Run linting
        run: |
          cd ${{ matrix.app }}
          npm run lint || echo "Linting not configured"

      - name: Run tests
        run: |
          cd ${{ matrix.app }}
          npm test || echo "Tests not configured"

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: test-pr
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend image (test only)
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Simulator image (test only)
        uses: docker/build-push-action@v5
        with:
          context: ./simulator
          push: false
          tags: simulator:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  helm-lint:
    name: Helm Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Lint Helm charts
        run: |
          helm lint ./chart
          helm template ./chart --values chart/values.yaml > /dev/null
          helm template ./chart --values chart/values-cloud.yaml > /dev/null 